#Even Fibonacci numbers
#Problem 2
'''

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''
import logging


logging.basicConfig(level = logging.DEBUG)

def fib(n):
	if (n == 0):
		return 1
	elif (n == 1):
		return 1
	else:
		return (fib(n-2) + fib(n-1))

l = list()
l.append(1)
l.append(1)
i = 2

while(True):
	l.append(l[i-1] + l[i-2])
	if (l[i] >= 4000000):
		l.pop()	
		break
	i += 1

for i in range(len(l)):
	if(l[i] % 2 != 0):
		l[i] = 0	
	
l.remove(0)
s = sum(l)

logging.debug(s)	
